<template>
  <div>
    <p>편지 작성</p>
    <textarea v-model="content" placeholder="마음을 적어주세요" rows="10"></textarea>
    <div class="send-button-container">
      <button @click="sendLetter">편지 보내기</button>
    </div>
    <div class="button-container">
      <button class="my-button" @click="goFont">폰트 변경</button>
      <button class="my-button" @click="goColor">색깔 변경</button>
    </div>
    <RouterView 
      @fontSelected="fontSelected = $event" 
      @colorSelected="colorSelected = $event"
    />
  </div>
</template>

<script setup>
import { ref } from "vue";
import { useRoute, useRouter } from "vue-router";
import axios from "axios";

const route = useRoute();
const router = useRouter();

const rollingPaperNo = route.query.id;
const writerNo = route.query.userNo;
const content = ref("");
const fontSelected = ref("");
const colorSelected = ref("");

function goFont() {
  router.push("/lettercreate/font");
}

function goColor() {
  router.push("/lettercreate/color");
}

function sendLetter() {
  const letterData = {
    rollingPaperNo,
    writerNo,
    content: content.value,
    fontColor: fontSelected.value,
    backColor: colorSelected.value
  };

  console.log("전송 데이터:", letterData); // 전체 데이터 로그
  console.log("선택된 글씨 색상:", fontSelected.value); // 글씨 색상 로그
  console.log("선택된 배경 색상:", colorSelected.value); // 배경 색상 로그

  axios.post('http://localhost:8080/letter/write', letterData)
    .then(response => {
      console.log("편지 전송 성공", response);
    })
    .catch(error => {
      console.error("편지 전송 실패", error);
    });
}
</script>

<style scoped>
.send-button-container {
  display: flex;
  justify-content: center;
  width: 100%;
  margin-bottom: 20px;
}
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  background-color: #f0f0f0;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  max-width: 600px;
  margin: auto;
  margin-top: 50px;
}

p {
  font-size: 24px;
  color: #333;
  margin-bottom: 20px;
}
textarea {
  width: 100%;
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
  box-sizing: border-box;
  font-size: 16px;
  resize: vertical; /* 사용자가 수직으로 크기 조절 가능 */
}

button {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  background-color: #4CAF50;
  color: white;
  cursor: pointer;
  margin: 20px auto; /* 상하 여백 추가 및 좌우 마진 자동으로 설정 */
  display: block; /* 블록 레벨 요소로 설정 */
}

.button-container {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

.my-button {
  background-color: #008CBA;
  margin: 0 10px;
}

.my-button:hover {
  background-color: #007BAA;
}

.my-button {
  background-color: #bf94e4; /* 버튼 배경색을 기본 색상으로 설정 */
  border: none;
  padding: 10px 15px;
  margin-right: 10px;
  cursor: pointer;
  color: white; /* 버튼 텍스트 색상을 흰색으로 설정 */
  font-weight: bold;
  text-align: center;
}

.my-button:last-child {
  margin-right: 0;
}
</style>